 function initAutocomplete() {		var map = new google.maps.Map(document.getElementById('googleMap'), {	          center: {lat: -33.8688, lng: 151.2195},          zoom: 13,          mapTypeId: 'roadmap'        });	          var input = document.getElementById('pac-input');        var searchBox = new google.maps.places.SearchBox(input);        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);        map.addListener('bounds_changed', function() {          searchBox.setBounds(map.getBounds());        });        var markers = [];        searchBox.addListener('places_changed', function() {          var places = searchBox.getPlaces();          if (places.length == 0) {            return;          }          markers.forEach(function(marker) {            marker.setMap(null);          });          markers = [];          var bounds = new google.maps.LatLngBounds();          places.forEach(function(place) {            if (!place.geometry) {              console.log("Returned place contains no geometry");              return;            }                    markers.push(new google.maps.Marker({              map: map,              title: place.name,              position: place.geometry.location,			  draggable:true              })			);									console.log(markers[0].position.lat());						console.log(markers[0].position.lng());var last_marker = markers[markers.length - 1];console.log(last_marker.map.center.lat());console.log(last_marker.map.center.lng());document.getElementById('lat').value = markers[0].position.lat();document.getElementById('lng').value = markers[0].position.lng();	    google.maps.event.addListener(last_marker,'dragend',function(event) {        document.getElementById('lat').value = event.latLng.lat();        document.getElementById('lng').value = event.latLng.lng();    });            if (place.geometry.viewport) {			  bounds.union(place.geometry.viewport);            } else {              bounds.extend(place.geometry.location);            }						          });          map.fitBounds(bounds);        });      }